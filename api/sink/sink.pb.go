// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sink.proto

package sink

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TracingInfo struct {
	Key                  *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracingInfo) Reset()         { *m = TracingInfo{} }
func (m *TracingInfo) String() string { return proto.CompactTextString(m) }
func (*TracingInfo) ProtoMessage()    {}
func (*TracingInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_de3fdc9ddbd2b26e, []int{0}
}

func (m *TracingInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingInfo.Unmarshal(m, b)
}
func (m *TracingInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingInfo.Marshal(b, m, deterministic)
}
func (m *TracingInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingInfo.Merge(m, src)
}
func (m *TracingInfo) XXX_Size() int {
	return xxx_messageInfo_TracingInfo.Size(m)
}
func (m *TracingInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TracingInfo proto.InternalMessageInfo

func (m *TracingInfo) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *TracingInfo) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type SinkMessage struct {
	MessageId            *string        `protobuf:"bytes,1,req,name=message_id,json=messageId" json:"message_id,omitempty"`
	Content              []byte         `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	CurrentChunkNumber   *int32         `protobuf:"varint,5,opt,name=current_chunk_number,json=currentChunkNumber" json:"current_chunk_number,omitempty"`
	TotalChunks          *int32         `protobuf:"varint,6,opt,name=total_chunks,json=totalChunks" json:"total_chunks,omitempty"`
	TracingInfo          []*TracingInfo `protobuf:"bytes,7,rep,name=tracing_info,json=tracingInfo" json:"tracing_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SinkMessage) Reset()         { *m = SinkMessage{} }
func (m *SinkMessage) String() string { return proto.CompactTextString(m) }
func (*SinkMessage) ProtoMessage()    {}
func (*SinkMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_de3fdc9ddbd2b26e, []int{1}
}

func (m *SinkMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinkMessage.Unmarshal(m, b)
}
func (m *SinkMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinkMessage.Marshal(b, m, deterministic)
}
func (m *SinkMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinkMessage.Merge(m, src)
}
func (m *SinkMessage) XXX_Size() int {
	return xxx_messageInfo_SinkMessage.Size(m)
}
func (m *SinkMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SinkMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SinkMessage proto.InternalMessageInfo

func (m *SinkMessage) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *SinkMessage) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *SinkMessage) GetCurrentChunkNumber() int32 {
	if m != nil && m.CurrentChunkNumber != nil {
		return *m.CurrentChunkNumber
	}
	return 0
}

func (m *SinkMessage) GetTotalChunks() int32 {
	if m != nil && m.TotalChunks != nil {
		return *m.TotalChunks
	}
	return 0
}

func (m *SinkMessage) GetTracingInfo() []*TracingInfo {
	if m != nil {
		return m.TracingInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*TracingInfo)(nil), "TracingInfo")
	proto.RegisterType((*SinkMessage)(nil), "SinkMessage")
}

func init() { proto.RegisterFile("sink.proto", fileDescriptor_de3fdc9ddbd2b26e) }

var fileDescriptor_de3fdc9ddbd2b26e = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x95, 0x96, 0xb4, 0xea, 0x39, 0x03, 0x3a, 0x75, 0xf0, 0x82, 0x14, 0x3a, 0x65, 0x2a,
	0x08, 0x89, 0x17, 0x80, 0xa9, 0x03, 0x0c, 0x81, 0x89, 0x25, 0x0a, 0xae, 0x5b, 0x2c, 0x37, 0x67,
	0x64, 0x9f, 0x91, 0x78, 0x47, 0x1e, 0x0a, 0xc5, 0x0e, 0xa2, 0xdb, 0xf7, 0xe7, 0x67, 0x4b, 0xdf,
	0x01, 0x04, 0x43, 0x76, 0xfb, 0xe9, 0x1d, 0xbb, 0xcd, 0x3d, 0x88, 0x57, 0xdf, 0x2b, 0x43, 0xc7,
	0x1d, 0x1d, 0x1c, 0x5e, 0xc2, 0xdc, 0xea, 0x6f, 0x59, 0xd4, 0xb3, 0x66, 0xd5, 0x8e, 0x12, 0xd7,
	0x50, 0x7e, 0xf5, 0xa7, 0xa8, 0xe5, 0x2c, 0x65, 0xd9, 0x6c, 0x7e, 0x0a, 0x10, 0x2f, 0x86, 0xec,
	0x93, 0x0e, 0xa1, 0x3f, 0x6a, 0xbc, 0x02, 0x18, 0xb2, 0xec, 0xcc, 0x7e, 0x7a, 0xbe, 0x9a, 0x92,
	0xdd, 0x1e, 0x25, 0x2c, 0x95, 0x23, 0xd6, 0xc4, 0xe9, 0x9b, 0xaa, 0xfd, 0xb3, 0x78, 0x0b, 0x6b,
	0x15, 0xbd, 0xd7, 0xc4, 0x9d, 0xfa, 0x88, 0x64, 0x3b, 0x8a, 0xc3, 0xbb, 0xf6, 0xb2, 0xac, 0x8b,
	0xa6, 0x6c, 0x71, 0xea, 0x1e, 0xc7, 0xea, 0x39, 0x35, 0x78, 0x0d, 0x15, 0x3b, 0xee, 0x4f, 0x99,
	0x0f, 0x72, 0x91, 0x48, 0x91, 0xb2, 0xc4, 0x05, 0xbc, 0x81, 0x8a, 0xf3, 0xa8, 0xce, 0xd0, 0xc1,
	0xc9, 0x65, 0x3d, 0x6f, 0xc4, 0x5d, 0xb5, 0x3d, 0x5b, 0xda, 0x0a, 0xfe, 0x37, 0x0f, 0x8b, 0xb7,
	0x8b, 0xf1, 0x26, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x24, 0x9b, 0xf4, 0xdd, 0x1a, 0x01, 0x00,
	0x00,
}
